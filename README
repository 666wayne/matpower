=====================================================
 MATPOWER - A Matlab Power System Simulation Package
=====================================================

Version:    3.2

Home Page:  http://www.pserc.cornell.edu/matpower/

Authors:    Ray Zimmerman               <rz10@cornell.edu>
            Carlos E. Murillo-Sanchez   <carlos_murillo@ieee.org>
            Deqiang (David) Gan         <dgan@zju.edu.cn>

            Tue, Sep 11, 2007

$Id$
Copyright (c) 1997-2006 by Power System Engineering Research Center (PSERC)
See http://www.pserc.cornell.edu/matpower/ for more info.


--------------
 INTRODUCTION
--------------

MATPOWER is a package of Matlab M-files for solving power flow and
optimal power flow problems. It is intended as a simulation tool for
researchers and educators that is easy to use and modify. MATPOWER
is designed to give the best performance possible while keeping the code
simple to understand and modify. It was initially developed as part
of the PowerWeb project <http://www.pserc.cornell.edu/powerweb/>.

MATPOWER can be downloaded from the MATPOWER home page above. 


--------------
 TERMS OF USE
--------------

- MATPOWER is free of charge. Anyone may use it.
- We make no warranties, express or implied. Specifically, we make no
  guarantees regarding the correctness MATPOWER's code or its fitness for any
  particular purpose.
- Any publications derived from the use of MATPOWER must acknowledge MATPOWER
  <http://www.pserc.cornell.edu/matpower/>.
- Anyone may modify MATPOWER for their own use as long as the original
  copyright notices remain in place.
- MATPOWER may not be redistributed without written permission.
- Modified versions of MATPOWER, or works derived from MATPOWER, may not be
  distributed without written permission.


-----------------
 GETTING STARTED
-----------------

System Requirements
-------------------
    - Matlab version 6 or later
    - Matlab Optimization Toolbox (required only for some OPF algorithms)

Installation
------------
    1. Unzip the downloaded file.
    2. Place files in a location on your Matlab path.
    3. Start up Matlab.

Running MATPOWER
----------------
To run a simple Newton power flow on the 9-bus system specified in the
file case9.m, with the default algorithm options, at the Matlab prompt,
type:

    >> runpf('case9')

To run an optimal power flow on the 30-bus system whose data is in
case30.m, with the default algorithm options, at the Matlab prompt,
type:

    >> runopf('case30')

To run an optimal power flow on the same system, but with the option for
MATPOWER to shut down (decommit) expensive generators, type:

    >> runuopf('case30')

For info on other parameters and options, try these:
    >> help runpf
    >> help runopf
    >> help runuopf
    >> help mpoption
    >> help caseformat

To run the test suite, place the files in the 't' subdirectory in your
Matlab path, and type:
    >> test_matpower


---------------------------
 WHAT'S NEW IN VERSION 3.2
---------------------------

Below is a summary of the changes since version 3.0 of MATPOWER. See the
CHANGES file in the docs directory for all the gory details.

New features:
- AC OPF formulation enhancements
  - new generalized cost model
  - piece-wise linear generator PQ capability curves
  - branch angle difference constraints
  - option to use current magnitude for line flow limits
	(Set OPF_FLOW_LIM to 2, fmincopf solver only)
- AC OPF solvers
  - support for TSPOPF, a new optional package of three OPF solvers,
    implemented as C MEX files, suitable for large scale systems
  - ability to specify initial value and bounds on user variables z
- New case file format (v. 2)
  - all data in a single struct
  - generator PQ capability curves
  - generator ramp rates
  - branch angle difference limits
- New function to build DC PDTF matrix (makePTDF.m)
- Added 5 larger scale (> 2000 bus) cases for Polish system.
  (Thanks to Roman Korab).
- Improved identification of binding constraints in printout.
- Many new tests in test suite.

Bugs fixed:
- Phase shifters shifted the wrong direction, again (v.2 had it right).
- Fixed bug in pfsoln.m which caused incorrect value for Qg when
  Qmin == Qmax for all generators at a bus in power flow solution.

INCOMPATIBLE CHANGES:
- User supplied A matrix for general linear constraints in OPF no
  longer includes columns for helper variables for piecewise linear
  gen costs, and now requires columns for all x (OPF) variables.
- Changed the sign convention used for phase shifters to be consistent
  with PTI, PowerWorld, PSAT, etc. E.g. A phase shift of 10 deg now
  means the voltage at the "to" end is delayed by 10 degrees.
- Name of option 24 in mpoption changed from OPF_P_LINE_LIM to
  OPF_FLOW_LIM.

---------------
 DOCUMENTATION
---------------

There are two primary sources of documentation for MATPOWER.
    - Matlab's 'help' command
    - MATPOWER User's Manual

The User's Manual is included in the distribution (manual.pdf in docs
directory) or it can be downloaded separately from the link above.

Each M-file has its own documentation which can be accessed by typing at
the Matlab prompt:

    help <name of M-file>

Documentation for the case data file format can be found by typing:

    help caseformat

If something is still unclear after checking the manual and the help,
the source code *is* the documentation ;-)


-------------------
 OPTIONAL PACKAGES
-------------------

There are three optional packages to enhance the performance of MATPOWER
that may be downloaded separately. MINOPF and BPMPDMEX have more
restrictive licenses than MATPOWER. Please see the individual
Terms of Use for details.

 - TSPOPF      A package of three AC OPF solvers implemented as C MEX files.
               Suitable for larger scale problems.
               See http://www.pserc.cornell.edu/tspopf/

 - MINOPF      A MINOS-based AC OPF solver implemented as a Fortran MEX file.
               See http://www.pserc.cornell.edu/minopf/

 - BPMPD_MEX   MEX-file version of the high performance BPMPD interior
               point LP and QP solver. Speeds up DC and LP-based OPF solvers,
               and improves robustness of MINOPF.
               See http://www.pserc.cornell.edu/bpmpd/

These packages are distributed separately since each has it's own
license agreement and terms of use.



--------------
 MAILING LIST
--------------

An e-mail list <MATPOWER-L@cornell.edu> has been set up to facilitate
discussion of MATPOWER. Only list subscribers are permitted to post to
the list.

Feel free to use this list to discuss anything related to MATPOWER, to
ask questions about MATPOWER, or to provide feedback to the developers
of MATPOWER, such as bug reports, patches or ideas for improvements
(though we make no guarantees about if/when they might be included).

Also, if you have any of your own Matlab power systems code that you
would like to contribute, feel free to contact us via this list about
making it available on the MATPOWER web site.

Joining the list
----------------
To join the MATPOWER mailing list, send an e-mail to
<lyris@cornell.edu> with the following line in the body of the
message, where "John Doe" is replaced by your real name.

    join MATPOWER-L "John Doe"

Sending mail to the list
------------------------
To send an e-mail to all of the subscribers of the MATPOWER mailing
list, simply address your e-mail to <MATPOWER-L@cornell.edu>. Only
subscribers are permitted to send e-mail to the list.

Leaving the list
----------------
You can unsubscribe from the list at any time by sending an e-mail to
<lyris@cornell.edu> with the following line in the body of the
message.

    leave MATPOWER-L
